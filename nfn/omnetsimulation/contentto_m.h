//
// Generated file, do not edit! Created by opp_msgc 4.4 from contentto.msg.
//

#ifndef _CONTENTTO_M_H_
#define _CONTENTTO_M_H_

#include <omnetpp.h>

// opp_msgc version check
#define MSGC_VERSION 0x0404
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgc: 'make clean' should help.
#endif



/**
 * Class generated from <tt>contentto.msg</tt> by opp_msgc.
 * <pre>
 * packet ContentTo
 * {
 *     string host;
 *     int port;
 *     string name;
 *     string data;
 *     string toPrefix;
 *     bool isSend;
 * }
 * </pre>
 */
class ContentTo : public ::cPacket
{
  protected:
    opp_string host_var;
    int port_var;
    opp_string name_var;
    opp_string data_var;
    opp_string toPrefix_var;
    bool isSend_var;

  private:
    void copy(const ContentTo& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const ContentTo&);

  public:
    ContentTo(const char *name=NULL, int kind=0);
    ContentTo(const ContentTo& other);
    virtual ~ContentTo();
    ContentTo& operator=(const ContentTo& other);
    virtual ContentTo *dup() const {return new ContentTo(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual const char * getHost() const;
    virtual void setHost(const char * host);
    virtual int getPort() const;
    virtual void setPort(int port);
    virtual const char * getName() const;
    virtual void setName(const char * name);
    virtual const char * getData() const;
    virtual void setData(const char * data);
    virtual const char * getToPrefix() const;
    virtual void setToPrefix(const char * toPrefix);
    virtual bool getIsSend() const;
    virtual void setIsSend(bool isSend);
};

inline void doPacking(cCommBuffer *b, ContentTo& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, ContentTo& obj) {obj.parsimUnpack(b);}


#endif // _CONTENTTO_M_H_
