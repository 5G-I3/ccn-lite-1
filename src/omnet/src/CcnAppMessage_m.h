//
// Generated file, do not edit! Created by opp_msgc 4.5 from CcnAppMessage.msg.
//

#ifndef _CCNAPPMESSAGE_M_H_
#define _CCNAPPMESSAGE_M_H_

#include <omnetpp.h>

// opp_msgc version check
#define MSGC_VERSION 0x0405
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgc: 'make clean' should help.
#endif

// cplusplus {{
#include "INETDefs.h"
#include "ByteArrayMessage.h"
// }}



/**
 * Enum generated from <tt>CcnAppMessage.msg</tt> by opp_msgc.
 * <pre>
 * enum CcnAppMessageType {
 *     CCN_APP_INTEREST=24;
 *     CCN_APP_CONTENT=42;
 * };
 * </pre>
 */
enum CcnAppMessageType {
    CCN_APP_INTEREST = 24,
    CCN_APP_CONTENT = 42
};

/**
 * Enum generated from <tt>CcnAppMessage.msg</tt> by opp_msgc.
 * <pre>
 * enum CcnRelayAction {
 *     CONTENT_REGISTER=421;
 *     CONTENT_UNREGISTER=422;
 *     CONTENT_DELIVER=423;
 * };
 * </pre>
 */
enum CcnRelayAction {
    CONTENT_REGISTER = 421,
    CONTENT_UNREGISTER = 422,
    CONTENT_DELIVER = 423
};

/**
 * Class generated from <tt>CcnAppMessage.msg</tt> by opp_msgc.
 * <pre>
 * packet CcnAppMessage extends ByteArrayMessage {
 *     int		type @enum(CcnAppMessageType);
 *     int		action @enum(CcnRelayAction);
 *     string 	contentName;
 *     int 	seqNr;		
 *     					
 *     int		numChunks;	
 *     int 	chunkSize;	
 * 
 *     
 *     
 *     
 *     
 * };
 * </pre>
 */
class CcnAppMessage : public ::ByteArrayMessage
{
  protected:
    int type_var;
    int action_var;
    opp_string contentName_var;
    int seqNr_var;
    int numChunks_var;
    int chunkSize_var;

  private:
    void copy(const CcnAppMessage& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const CcnAppMessage&);

  public:
    CcnAppMessage(const char *name=NULL, int kind=0);
    CcnAppMessage(const CcnAppMessage& other);
    virtual ~CcnAppMessage();
    CcnAppMessage& operator=(const CcnAppMessage& other);
    virtual CcnAppMessage *dup() const {return new CcnAppMessage(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual int getType() const;
    virtual void setType(int type);
    virtual int getAction() const;
    virtual void setAction(int action);
    virtual const char * getContentName() const;
    virtual void setContentName(const char * contentName);
    virtual int getSeqNr() const;
    virtual void setSeqNr(int seqNr);
    virtual int getNumChunks() const;
    virtual void setNumChunks(int numChunks);
    virtual int getChunkSize() const;
    virtual void setChunkSize(int chunkSize);
};

inline void doPacking(cCommBuffer *b, CcnAppMessage& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, CcnAppMessage& obj) {obj.parsimUnpack(b);}


#endif // _CCNAPPMESSAGE_M_H_
