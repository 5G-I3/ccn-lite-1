cmake_minimum_required(VERSION 3.3)
project(src)

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")

set(SOURCE_FILES
    android/jni/ccn-lite-jni.c
    omnet/src/Ccn.cc
    omnet/src/Ccn.h
    omnet/src/CcnAdmin.cc
    omnet/src/CcnAdmin.h
    omnet/src/CcnCore.cc
    omnet/src/CcnCore.h
    omnet/src/CcnInet.cc
    omnet/src/CcnInet.h
    omnet/src/Parser.cc
    omnet/src/Parser.h
    omnet/src/shared.cc
    omnet/src/shared.h
    util/base64.c
    util/ccn-lite-ccnb2xml.c
    util/ccn-lite-cryptoserver.c
    util/ccn-lite-ctrl.c
    util/ccn-lite-deF.c
    util/ccn-lite-fetch.c
    util/ccn-lite-mkC.c
    util/ccn-lite-mkF.c
    util/ccn-lite-mkI.c
    util/ccn-lite-peek.c
    util/ccn-lite-peekcomputation.c
    util/ccn-lite-pktdump.c
    util/ccn-lite-produce.c
    util/ccn-lite-rpc.c
    util/ccn-lite-simplenfn.c
    util/ccn-lite-valid.c
    util/ccnl-common.c
    util/ccnl-crypto.c
    util/ccnl-frag.h
    util/ccnl-socket.c
    ccn-lite-android.c
    ccn-lite-arduino.c
    ccn-lite-lnxkernel.c
    ccn-lite-minimalrelay.c
    ccn-lite-relay.c
    ccn-lite-rfduino.c
    ccn-lite-riot.c
    ccn-lite-simu.c
    ccnl-core-fwd.c
    ccnl-core-util.c
    ccnl-core.c
    ccnl-core.h
    ccnl-defs.h
    ccnl-ext-crypto.c
    ccnl-ext-debug.c
    ccnl-ext-debug.h
    ccnl-ext-echo.c
    ccnl-ext-frag.c
    ccnl-ext-hmac.c
    ccnl-ext-http.c
    ccnl-ext-localrpc.c
    ccnl-ext-logging.c
    ccnl-ext-mgmt.c
    ccnl-ext-nfn.c
    ccnl-ext-nfn.h
    ccnl-ext-nfncommon.c
    ccnl-ext-nfnkrivine.c
    ccnl-ext-nfnmonitor.c
    ccnl-ext-nfnops.c
    ccnl-ext-nfnparse.c
    ccnl-ext-sched.c
    ccnl-ext.h
    ccnl-os-includes.h
    ccnl-os-time.c
    ccnl-pkt-ccnb.c
    ccnl-pkt-ccnb.h
    ccnl-pkt-ccntlv.c
    ccnl-pkt-ccntlv.h
    ccnl-pkt-cistlv.c
    ccnl-pkt-cistlv.h
    ccnl-pkt-iottlv.c
    ccnl-pkt-iottlv.h
    ccnl-pkt-localrpc.c
    ccnl-pkt-localrpc.h
    ccnl-pkt-ndntlv.c
    ccnl-pkt-ndntlv.h
    ccnl-pkt-switch.c
    ccnl-simu-client.c
    ccnl-uapi.c
    ccnl-uapi.h
    lib-sha256.c)

add_executable(src ${SOURCE_FILES})